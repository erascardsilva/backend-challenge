###  Erasmo Cardoso   
## TESTE API

### elastic  OK
GET http://localhost:9200
Accept: application/json

#################### Users 
### Get all users  OK OK
  
GET http://localhost:3000/api/users
Accept: application/json

### Create new user OK OK
POST http://localhost:3000/api/users
Content-Type: application/json
Accept: application/json

{
  "username": "Erasmo Card",
  "email": "erasmo@teste.com",
  "password_hash": "3727"
 
}

### Update  users OK
PUT http://localhost:3000/api/users/28
Content-Type: application/json
Accept: application/json

{
    
    "username": "Erasmo C atualizadoff",
    "email": "erasmo@teste.com atualizado",
    "password_hash": "3727 atualizado"
}



### Delete user  OK
DELETE http://localhost:3000/api/users/27
Accept: application/json


#####################################################
###########Mensagens

### Get all messages  OK
GET http://localhost:3000/api/messages
Accept: application/json

### Create messages  OK
POST http://localhost:3000/api/messages
Content-Type: application/json
Accept: application/json

{
  "sender_id": 3,
  "receiver_id": 3,
  "message": "Olá! Como você está? HAHA"
}

### Update messages OK
PUT http://localhost:3000/api/messages/5
Content-Type: application/json
Accept: application/json

{
  "sender_id": 3,
  "receiver_id": 3,
  "message": "Olá! Como você está? ATUALIZADO"
}

### Delete messages  OK
DELETE http://localhost:3000/api/messages/6
Accept: application/json






######### WS ####
GET http://localhost:3000/api/wstest
Accept: application/json



#### Teste de Conexão e Operação de Cache com Redis

# Testando Gravar e Ler um Valor no Redis
POST http://localhost:3000/api/redis
Content-Type: application/json

{
  "key": "testKey",
  "value": "Redis is working!"
}

###

# Testando
GET http://localhost:3000/api/redis?key=testKey
Accept: application/json

